// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ark

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opResumeModelCustomizationJobCommon = "ResumeModelCustomizationJob"

// ResumeModelCustomizationJobCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ResumeModelCustomizationJobCommon operation. The "output" return
// value will be populated with the ResumeModelCustomizationJobCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ResumeModelCustomizationJobCommon Request to send the API call to the service.
// the "output" return value is not valid until after ResumeModelCustomizationJobCommon Send returns without error.
//
// See ResumeModelCustomizationJobCommon for more information on using the ResumeModelCustomizationJobCommon
// API call, and error handling.
//
//    // Example sending a request using the ResumeModelCustomizationJobCommonRequest method.
//    req, resp := client.ResumeModelCustomizationJobCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ARK) ResumeModelCustomizationJobCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opResumeModelCustomizationJobCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ResumeModelCustomizationJobCommon API operation for ARK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ARK's
// API operation ResumeModelCustomizationJobCommon for usage and error information.
func (c *ARK) ResumeModelCustomizationJobCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ResumeModelCustomizationJobCommonRequest(input)
	return out, req.Send()
}

// ResumeModelCustomizationJobCommonWithContext is the same as ResumeModelCustomizationJobCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ResumeModelCustomizationJobCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ARK) ResumeModelCustomizationJobCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ResumeModelCustomizationJobCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opResumeModelCustomizationJob = "ResumeModelCustomizationJob"

// ResumeModelCustomizationJobRequest generates a "volcengine/request.Request" representing the
// client's request for the ResumeModelCustomizationJob operation. The "output" return
// value will be populated with the ResumeModelCustomizationJobCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ResumeModelCustomizationJobCommon Request to send the API call to the service.
// the "output" return value is not valid until after ResumeModelCustomizationJobCommon Send returns without error.
//
// See ResumeModelCustomizationJob for more information on using the ResumeModelCustomizationJob
// API call, and error handling.
//
//    // Example sending a request using the ResumeModelCustomizationJobRequest method.
//    req, resp := client.ResumeModelCustomizationJobRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ARK) ResumeModelCustomizationJobRequest(input *ResumeModelCustomizationJobInput) (req *request.Request, output *ResumeModelCustomizationJobOutput) {
	op := &request.Operation{
		Name:       opResumeModelCustomizationJob,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ResumeModelCustomizationJobInput{}
	}

	output = &ResumeModelCustomizationJobOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ResumeModelCustomizationJob API operation for ARK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ARK's
// API operation ResumeModelCustomizationJob for usage and error information.
func (c *ARK) ResumeModelCustomizationJob(input *ResumeModelCustomizationJobInput) (*ResumeModelCustomizationJobOutput, error) {
	req, out := c.ResumeModelCustomizationJobRequest(input)
	return out, req.Send()
}

// ResumeModelCustomizationJobWithContext is the same as ResumeModelCustomizationJob with the addition of
// the ability to pass a context and additional request options.
//
// See ResumeModelCustomizationJob for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ARK) ResumeModelCustomizationJobWithContext(ctx volcengine.Context, input *ResumeModelCustomizationJobInput, opts ...request.Option) (*ResumeModelCustomizationJobOutput, error) {
	req, out := c.ResumeModelCustomizationJobRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ResumeModelCustomizationJobInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ResumeModelCustomizationJobInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResumeModelCustomizationJobInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ResumeModelCustomizationJobInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ResumeModelCustomizationJobInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetId sets the Id field's value.
func (s *ResumeModelCustomizationJobInput) SetId(v string) *ResumeModelCustomizationJobInput {
	s.Id = &v
	return s
}

type ResumeModelCustomizationJobOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ResumeModelCustomizationJobOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResumeModelCustomizationJobOutput) GoString() string {
	return s.String()
}
