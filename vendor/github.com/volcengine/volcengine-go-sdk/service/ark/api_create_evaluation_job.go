// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ark

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateEvaluationJobCommon = "CreateEvaluationJob"

// CreateEvaluationJobCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateEvaluationJobCommon operation. The "output" return
// value will be populated with the CreateEvaluationJobCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateEvaluationJobCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateEvaluationJobCommon Send returns without error.
//
// See CreateEvaluationJobCommon for more information on using the CreateEvaluationJobCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateEvaluationJobCommonRequest method.
//    req, resp := client.CreateEvaluationJobCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ARK) CreateEvaluationJobCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateEvaluationJobCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateEvaluationJobCommon API operation for ARK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ARK's
// API operation CreateEvaluationJobCommon for usage and error information.
func (c *ARK) CreateEvaluationJobCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateEvaluationJobCommonRequest(input)
	return out, req.Send()
}

// CreateEvaluationJobCommonWithContext is the same as CreateEvaluationJobCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateEvaluationJobCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ARK) CreateEvaluationJobCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateEvaluationJobCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateEvaluationJob = "CreateEvaluationJob"

// CreateEvaluationJobRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateEvaluationJob operation. The "output" return
// value will be populated with the CreateEvaluationJobCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateEvaluationJobCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateEvaluationJobCommon Send returns without error.
//
// See CreateEvaluationJob for more information on using the CreateEvaluationJob
// API call, and error handling.
//
//    // Example sending a request using the CreateEvaluationJobRequest method.
//    req, resp := client.CreateEvaluationJobRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ARK) CreateEvaluationJobRequest(input *CreateEvaluationJobInput) (req *request.Request, output *CreateEvaluationJobOutput) {
	op := &request.Operation{
		Name:       opCreateEvaluationJob,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateEvaluationJobInput{}
	}

	output = &CreateEvaluationJobOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateEvaluationJob API operation for ARK.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ARK's
// API operation CreateEvaluationJob for usage and error information.
func (c *ARK) CreateEvaluationJob(input *CreateEvaluationJobInput) (*CreateEvaluationJobOutput, error) {
	req, out := c.CreateEvaluationJobRequest(input)
	return out, req.Send()
}

// CreateEvaluationJobWithContext is the same as CreateEvaluationJob with the addition of
// the ability to pass a context and additional request options.
//
// See CreateEvaluationJob for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ARK) CreateEvaluationJobWithContext(ctx volcengine.Context, input *CreateEvaluationJobInput, opts ...request.Option) (*CreateEvaluationJobOutput, error) {
	req, out := c.CreateEvaluationJobRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateEvaluationJobInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	DryRun *bool `type:"boolean" json:",omitempty"`

	// EndpointId is a required field
	EndpointId *string `type:"string" json:",omitempty" required:"true"`

	EvaluationDatasets []*EvaluationDatasetForCreateEvaluationJobInput `type:"list" json:",omitempty"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	ProjectName *string `type:"string" json:",omitempty"`

	Tags []*TagForCreateEvaluationJobInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s CreateEvaluationJobInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateEvaluationJobInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateEvaluationJobInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateEvaluationJobInput"}
	if s.EndpointId == nil {
		invalidParams.Add(request.NewErrParamRequired("EndpointId"))
	}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *CreateEvaluationJobInput) SetDescription(v string) *CreateEvaluationJobInput {
	s.Description = &v
	return s
}

// SetDryRun sets the DryRun field's value.
func (s *CreateEvaluationJobInput) SetDryRun(v bool) *CreateEvaluationJobInput {
	s.DryRun = &v
	return s
}

// SetEndpointId sets the EndpointId field's value.
func (s *CreateEvaluationJobInput) SetEndpointId(v string) *CreateEvaluationJobInput {
	s.EndpointId = &v
	return s
}

// SetEvaluationDatasets sets the EvaluationDatasets field's value.
func (s *CreateEvaluationJobInput) SetEvaluationDatasets(v []*EvaluationDatasetForCreateEvaluationJobInput) *CreateEvaluationJobInput {
	s.EvaluationDatasets = v
	return s
}

// SetName sets the Name field's value.
func (s *CreateEvaluationJobInput) SetName(v string) *CreateEvaluationJobInput {
	s.Name = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *CreateEvaluationJobInput) SetProjectName(v string) *CreateEvaluationJobInput {
	s.ProjectName = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *CreateEvaluationJobInput) SetTags(v []*TagForCreateEvaluationJobInput) *CreateEvaluationJobInput {
	s.Tags = v
	return s
}

type CreateEvaluationJobOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateEvaluationJobOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateEvaluationJobOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *CreateEvaluationJobOutput) SetId(v string) *CreateEvaluationJobOutput {
	s.Id = &v
	return s
}

type EvaluationDatasetForCreateEvaluationJobInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AdminEvaluationDatasetId *string `type:"string" json:",omitempty"`

	DatasetType *string `type:"string" json:",omitempty" enum:"EnumOfDatasetTypeForCreateEvaluationJobInput"`

	EvaluationAbility *string `type:"string" json:",omitempty"`

	Method *string `type:"string" json:",omitempty" enum:"EnumOfMethodForCreateEvaluationJobInput"`

	ScoringWeight *int32 `type:"int32" json:",omitempty"`

	TosLocation *TosLocationForCreateEvaluationJobInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s EvaluationDatasetForCreateEvaluationJobInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EvaluationDatasetForCreateEvaluationJobInput) GoString() string {
	return s.String()
}

// SetAdminEvaluationDatasetId sets the AdminEvaluationDatasetId field's value.
func (s *EvaluationDatasetForCreateEvaluationJobInput) SetAdminEvaluationDatasetId(v string) *EvaluationDatasetForCreateEvaluationJobInput {
	s.AdminEvaluationDatasetId = &v
	return s
}

// SetDatasetType sets the DatasetType field's value.
func (s *EvaluationDatasetForCreateEvaluationJobInput) SetDatasetType(v string) *EvaluationDatasetForCreateEvaluationJobInput {
	s.DatasetType = &v
	return s
}

// SetEvaluationAbility sets the EvaluationAbility field's value.
func (s *EvaluationDatasetForCreateEvaluationJobInput) SetEvaluationAbility(v string) *EvaluationDatasetForCreateEvaluationJobInput {
	s.EvaluationAbility = &v
	return s
}

// SetMethod sets the Method field's value.
func (s *EvaluationDatasetForCreateEvaluationJobInput) SetMethod(v string) *EvaluationDatasetForCreateEvaluationJobInput {
	s.Method = &v
	return s
}

// SetScoringWeight sets the ScoringWeight field's value.
func (s *EvaluationDatasetForCreateEvaluationJobInput) SetScoringWeight(v int32) *EvaluationDatasetForCreateEvaluationJobInput {
	s.ScoringWeight = &v
	return s
}

// SetTosLocation sets the TosLocation field's value.
func (s *EvaluationDatasetForCreateEvaluationJobInput) SetTosLocation(v *TosLocationForCreateEvaluationJobInput) *EvaluationDatasetForCreateEvaluationJobInput {
	s.TosLocation = v
	return s
}

type TagForCreateEvaluationJobInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForCreateEvaluationJobInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForCreateEvaluationJobInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForCreateEvaluationJobInput) SetKey(v string) *TagForCreateEvaluationJobInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForCreateEvaluationJobInput) SetValue(v string) *TagForCreateEvaluationJobInput {
	s.Value = &v
	return s
}

type TosLocationForCreateEvaluationJobInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BucketName *string `type:"string" json:",omitempty"`

	ObjectKey *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TosLocationForCreateEvaluationJobInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TosLocationForCreateEvaluationJobInput) GoString() string {
	return s.String()
}

// SetBucketName sets the BucketName field's value.
func (s *TosLocationForCreateEvaluationJobInput) SetBucketName(v string) *TosLocationForCreateEvaluationJobInput {
	s.BucketName = &v
	return s
}

// SetObjectKey sets the ObjectKey field's value.
func (s *TosLocationForCreateEvaluationJobInput) SetObjectKey(v string) *TosLocationForCreateEvaluationJobInput {
	s.ObjectKey = &v
	return s
}

const (
	// EnumOfDatasetTypeForCreateEvaluationJobInputAdminDataset is a EnumOfDatasetTypeForCreateEvaluationJobInput enum value
	EnumOfDatasetTypeForCreateEvaluationJobInputAdminDataset = "AdminDataset"

	// EnumOfDatasetTypeForCreateEvaluationJobInputUserDataset is a EnumOfDatasetTypeForCreateEvaluationJobInput enum value
	EnumOfDatasetTypeForCreateEvaluationJobInputUserDataset = "UserDataset"
)

const (
	// EnumOfMethodForCreateEvaluationJobInputInclude is a EnumOfMethodForCreateEvaluationJobInput enum value
	EnumOfMethodForCreateEvaluationJobInputInclude = "Include"

	// EnumOfMethodForCreateEvaluationJobInputBuiltIn is a EnumOfMethodForCreateEvaluationJobInput enum value
	EnumOfMethodForCreateEvaluationJobInputBuiltIn = "BuiltIn"

	// EnumOfMethodForCreateEvaluationJobInputMatch is a EnumOfMethodForCreateEvaluationJobInput enum value
	EnumOfMethodForCreateEvaluationJobInputMatch = "Match"

	// EnumOfMethodForCreateEvaluationJobInputInferenceOnly is a EnumOfMethodForCreateEvaluationJobInput enum value
	EnumOfMethodForCreateEvaluationJobInputInferenceOnly = "InferenceOnly"
)
